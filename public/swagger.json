{
    "openapi": "3.0.0",
    "info": {
        "title": "API Documentation",
        "version": "1.0.0",
        "description": "API documentation for authentication and user management"
    },
    "servers": [
        {
            "url": "http://localhost:3000"
        },
        {
            "url": "https://os-project-server.vercel.app/"
        }
    ],
    "paths": {
        "/auth/": {
            "get": {
                "summary": "Welcome message for the Auth route",
                "description": "Returns a welcome message for the Auth route.",
                "tags": [
                    "Auth"
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string",
                                    "example": "This is auth route"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/newuser": {
            "post": {
                "summary": "Register a new user",
                "description": "Creates a new user account with a hashed password.",
                "tags": [
                    "Auth"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "username": {
                                        "type": "string"
                                    },
                                    "email": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "username",
                                    "email",
                                    "password"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully"
                    },
                    "400": {
                        "description": "Bad request: Missing fields"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/auth/existinguser": {
            "post": {
                "summary": "Login an existing user",
                "description": "Authenticates a user and returns a JWT token.",
                "tags": [
                    "Auth"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "username": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "username",
                                    "password"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful login",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "token": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication failed"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/auth/users": {
            "get": {
                "summary": "Fetch all users",
                "description": "Returns a list of all registered users.",
                "tags": [
                    "Auth"
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "username": {
                                                "type": "string"
                                            },
                                            "email": {
                                                "type": "string"
                                            },
                                            "createdAt": {
                                                "type": "string",
                                                "format": "date-time"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to fetch users"
                    }
                }
            }
        },
        "/auth/send-otp": {
            "post": {
                "summary": "Send OTP to email",
                "description": "Generates an OTP and sends it to the specified email address.",
                "tags": [
                    "Auth"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "email": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "email"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OTP sent successfully"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "500": {
                        "description": "Error sending OTP"
                    }
                }
            }
        },
        "/auth/reset-password": {
            "post": {
                "summary": "Reset password using OTP",
                "description": "Verifies the OTP and resets the user's password.",
                "tags": [
                    "Auth"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "email": {
                                        "type": "string"
                                    },
                                    "otp": {
                                        "type": "string"
                                    },
                                    "newPassword": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "email",
                                    "otp",
                                    "newPassword"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password updated successfully"
                    },
                    "400": {
                        "description": "Invalid OTP"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
            "/api/files": {
              "get": {
                "summary": "Get all files",
                "description": "Retrieve all files and directories for a user.",
                "tags": [
                    "FileSystem"
                ],
                "responses": {
                  "200": {
                    "description": "List of files",
                    "schema": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/File"
                      }
                    }
                  },
                  "500": {
                    "description": "Internal server error"
                  }
                }
              },
              "post": {
                "summary": "Create a new file or directory",
                "description": "Create a new file or directory.",
                "tags": [
                    "FileSystem"
                ],
                "parameters": [
                  {
                    "name": "body",
                    "in": "body",
                    "description": "File or directory data",
                    "required": true,
                    "schema": {
                      "$ref": "#/definitions/File"
                    }
                  }
                ],
                "responses": {
                  "201": {
                    "description": "File or directory created"
                  },
                  "400": {
                    "description": "Invalid input"
                  },
                  "500": {
                    "description": "Internal server error"
                  }
                }
              }
            },
            "/api/files/{id}": {
              "get": {
                "summary": "Get a single file or directory",
                "description": "Retrieve the details of a specific file or directory.",
                "tags": [
                    "FileSystem"
                ],
                "parameters": [
                  {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string",
                    "description": "ID of the file or directory"
                  }
                ],
                "responses": {
                  "200": {
                    "description": "File or directory details",
                    "schema": {
                      "$ref": "#/definitions/File"
                    }
                  },
                  "404": {
                    "description": "File or directory not found"
                  },
                  "500": {
                    "description": "Internal server error"
                  }
                }
              },
              "put": {
                "summary": "Update a file or directory",
                "description": "Update the details of a specific file or directory.",
                "tags": [
                    "FileSystem"
                ],
                "parameters": [
                  {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string",
                    "description": "ID of the file or directory"
                  },
                  {
                    "name": "body",
                    "in": "body",
                    "required": true,
                    "description": "Updated file or directory data",
                    "schema": {
                      "$ref": "#/definitions/File"
                    }
                  }
                ],
                "responses": {
                  "200": {
                    "description": "File or directory updated"
                  },
                  "400": {
                    "description": "Invalid input"
                  },
                  "404": {
                    "description": "File or directory not found"
                  },
                  "500": {
                    "description": "Internal server error"
                  }
                }
              },
              "delete": {
                "summary": "Delete a file or directory",
                "description": "Delete a specific file or directory.",
                "tags": [
                    "FileSystem"
                ],
                "parameters": [
                  {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string",
                    "description": "ID of the file or directory"
                  }
                ],
                "responses": {
                  "200": {
                    "description": "File or directory deleted"
                  },
                  "404": {
                    "description": "File or directory not found"
                  },
                  "500": {
                    "description": "Internal server error"
                  }
                }
              }
            }
          },
          "definitions": {
            "File": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "description": "User's email"
                },
                "name": {
                  "type": "string",
                  "description": "Name of the file or directory"
                },
                "type": {
                  "type": "string",
                  "enum": ["file", "directory"],
                  "description": "Type of item (file or directory)"
                },
                "path": {
                  "type": "string",
                  "description": "Path of the file or directory"
                },
                "extension": {
                  "type": "string",
                  "description": "File extension (if type is 'file')"
                },
                "content": {
                  "type": "string",
                  "description": "Content of the file (if type is 'file')"
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Date the file or directory was created"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Date the file or directory was last updated"
                }
              }
            }
          }
        }
    
