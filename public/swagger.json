{
    "openapi": "3.0.0",
    "info": {
        "title": "Auth API Documentation",
        "version": "1.0.0",
        "description": "API documentation for authentication and user management"
    },
    "servers": [
        {
            "url": "http://localhost:3000"
        },
        {
            "url": "https://os-project-server.vercel.app/"
        }
    ],
    "paths": {
        "/auth/": {
            "get": {
                "summary": "Welcome message for the Auth route",
                "description": "Returns a welcome message for the Auth route.",
                "tags": [
                    "Auth"
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string",
                                    "example": "This is auth route"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/newuser": {
            "post": {
                "summary": "Register a new user",
                "description": "Creates a new user account with a hashed password.",
                "tags": [
                    "Auth"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "username": {
                                        "type": "string"
                                    },
                                    "email": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "username",
                                    "email",
                                    "password"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully"
                    },
                    "400": {
                        "description": "Bad request: Missing fields"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/auth/existinguser": {
            "post": {
                "summary": "Login an existing user",
                "description": "Authenticates a user and returns a JWT token.",
                "tags": [
                    "Auth"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "username": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "username",
                                    "password"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful login",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "token": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication failed"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/auth/users": {
            "get": {
                "summary": "Fetch all users",
                "description": "Returns a list of all registered users.",
                "tags": [
                    "Auth"
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "username": {
                                                "type": "string"
                                            },
                                            "email": {
                                                "type": "string"
                                            },
                                            "createdAt": {
                                                "type": "string",
                                                "format": "date-time"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to fetch users"
                    }
                }
            }
        },
        "/auth/send-otp": {
            "post": {
                "summary": "Send OTP to email",
                "description": "Generates an OTP and sends it to the specified email address.",
                "tags": [
                    "Auth"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "email": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "email"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OTP sent successfully"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "500": {
                        "description": "Error sending OTP"
                    }
                }
            }
        },
        "/auth/reset-password": {
            "post": {
                "summary": "Reset password using OTP",
                "description": "Verifies the OTP and resets the user's password.",
                "tags": [
                    "Auth"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "email": {
                                        "type": "string"
                                    },
                                    "otp": {
                                        "type": "string"
                                    },
                                    "newPassword": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "email",
                                    "otp",
                                    "newPassword"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password updated successfully"
                    },
                    "400": {
                        "description": "Invalid OTP"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },"/api/file/create": {
  "post": {
    "summary": "Create a file or directory",
    "description": "Creates a new file or directory and associates it with a user's email.",
    "tags": ["File"],
    "requestBody": {
      "required": true,
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "name": { "type": "string" },
              "type": { "type": "string", "enum": ["file", "directory"] },
              "content": { "type": "string" },
              "parent": { "type": "string", "description": "Parent file ID (optional)" },
              "ownerEmail": { "type": "string" }
            },
            "required": ["name", "type", "ownerEmail"]
          }
        }
      }
    },
    "responses": {
      "201": { "description": "File or directory created successfully" },
      "404": { "description": "User not found" },
      "500": { "description": "Internal server error" }
    }
  }
},
"/api/file/list": {
  "get": {
    "summary": "List files or directories",
    "description": "Returns files or directories for a user, optionally filtered by parent.",
    "tags": ["File"],
    "parameters": [
      {
        "name": "ownerEmail",
        "in": "query",
        "required": true,
        "schema": { "type": "string" }
      },
      {
        "name": "parent",
        "in": "query",
        "required": false,
        "schema": { "type": "string" }
      }
    ],
    "responses": {
      "200": {
        "description": "Files listed successfully",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "_id": { "type": "string" },
                  "name": { "type": "string" },
                  "type": { "type": "string" },
                  "content": { "type": "string" },
                  "parent": { "type": "string" },
                  "ownerEmail": { "type": "string" },
                  "createdAt": { "type": "string", "format": "date-time" },
                  "updatedAt": { "type": "string", "format": "date-time" }
                }
              }
            }
          }
        }
      },
      "500": { "description": "Internal server error" }
    }
  }
},
"/api/file/update/{id}": {
  "put": {
    "summary": "Update file name or content",
    "description": "Updates the name or content of a file. Content updates apply only to files.",
    "tags": ["File"],
    "parameters": [
      {
        "name": "id",
        "in": "path",
        "required": true,
        "schema": { "type": "string" }
      }
    ],
    "requestBody": {
      "required": true,
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "name": { "type": "string" },
              "content": { "type": "string" }
            }
          }
        }
      }
    },
    "responses": {
      "200": { "description": "File updated successfully" },
      "404": { "description": "File not found" },
      "500": { "description": "Internal server error" }
    }
  }
},
"/api/file/delete/{id}": {
  "delete": {
    "summary": "Delete file or directory",
    "description": "Deletes a file or directory by ID. If a directory, its children are also deleted.",
    "tags": ["File"],
    "parameters": [
      {
        "name": "id",
        "in": "path",
        "required": true,
        "schema": { "type": "string" }
      }
    ],
    "responses": {
      "200": { "description": "File deleted successfully" },
      "404": { "description": "File not found" },
      "500": { "description": "Internal server error" }
    }
  }
}

    }
}